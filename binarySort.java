import java.util.Arrays;
import java.util.Scanner;

public class binarySort {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Запрашиваем у пользователя длину массива
        System.out.print("Введите размер массива: ");
        int size = scanner.nextInt();

        // Создаем массив заданного размера
        int[] array = new int[size];

        // Запрашиваем у пользователя элементы массива
        System.out.print("Введите элементы массива: ");
        for (int i = 0; i < size; i++) {
            array[i] = scanner.nextInt();
        }

        // Сортируем массив с использованием алгоритма сортировки "бинарный"
        BinarySort(array);

        // Выводим отсортированный массив
        System.out.println("Отсортированный массив: " + Arrays.toString(array));
    }
/*
Основной метод BinarySort принимает массив целых чисел array, который нужно отсортировать.

Алгоритм состоит из двух основных этапов:

1.Поиск места для вставки текущего элемента:

* Создается переменная key, которая хранит значение текущего элемента.
* Задаются переменные left (начальное значение 0) и right (начальное значение i - 1,
где i - номер текущего элемента в массиве). Эти переменные определяют диапазон поиска места
для вставки текущего элемента.
* Запускается цикл while, который выполняется, пока left не станет больше right.
Внутри цикла вычисляется средний индекс mid между left и right. Если значение key меньше
значения элемента с индексом mid в массиве array, то right сдвигается на одну позицию влево,
иначе left сдвигается на одну позицию вправо.
*По завершении цикла while значение переменной left указывает на место для вставки текущего элемента.

2. Вставка текущего элемента и перемещение элементов вправо:

* Запускается цикл for, который выполняется от i - 1 до left, с шагом -1. Внутри цикла каждый
элемент с индексом j сдвигается на одну позицию вправо путем присваивания этому элементу значение
предыдущего элемента.
* По завершении цикла for текущий элемент key вставляется на найденное место left в массиве array.
Таким образом, в результате работы данного алгоритма массив array будет отсортирован по возрастанию.
 */
    private static void BinarySort(int[] array) {
        for (int i = 1; i < array.length; i++) {
            int key = array[i];
            int left = 0;
            int right = i - 1;

            // Ищем место для вставки текущего элемента
            while (left <= right) {
                int mid = (left + right) / 2;

                if (key < array[mid]) {
                    right = mid - 1;
                } else {
                    left = mid + 1;
                }
            }

            // Перемещаем все элементы, большие текущего, на одну позицию вправо
            for (int j = i - 1; j >= left; j--) {
                array[j + 1] = array[j];
            }

            // Вставляем текущий элемент в найденное место
            array[left] = key;
        }
    }
}
